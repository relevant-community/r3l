syntax = "proto3";
package r3l.oracle.v1beta1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/api/annotations.proto";
import "oracle/v1beta/params.proto";

// this line is used by starport scaffolding # 1

option go_package = "github.com/relevant-community/r3l/x/oracle/types";

// Query defines the gRPC querier service.
service Query {
  // Params queries the parameters of slashing module
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/r3l/oracle/v1beta1/params";
  }
    // this line is used by starport scaffolding # 2
	rpc AllClaim(QueryAllClaimRequest) returns (QueryAllClaimResponse){
    option (google.api.http).get = "/r3l/oracle/v1beta1/allclaim";
  };
  // Claim queries claims based on claim hash.
  rpc Claim(QueryClaimRequest) returns (QueryClaimResponse){
    option (google.api.http).get = "/r3l/oracle/v1beta1/claim/{claim_hash}";
  };
}

// QueryParamsRequest is the request type for the Query/Params RPC method
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryClaimRequest is the request type for the Query/Claim RPC method
message QueryClaimRequest {
  bytes claim_hash = 1 [(gogoproto.casttype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];
}

// QueryClaimResponse is the response type for the Query/Claim RPC method.
message QueryClaimResponse {
  // claim returns the requested claim.
  google.protobuf.Any claim = 1;
}

// this line is used by starport scaffolding # 3

// QueryAllClaimRequest is the request type for the Query/AllClaim RPC method
message QueryAllClaimRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAllClaimResponse is the response type for the Query/Claim RPC method.
message QueryAllClaimResponse {
	repeated google.protobuf.Any claim = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
